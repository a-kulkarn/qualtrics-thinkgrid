% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_types.R
\name{create_custom_colorer}
\alias{create_custom_colorer}
\title{Create custom color scale with enhanced visibility for small values}
\usage{
create_custom_colorer(
  palette = "RdYlBu",
  zero_color = "#FFFFFF",
  n_colors = 11,
  gradient_scaling = "enhanced",
  enhanced_threshold_pct = 50,
  enhanced_expansion_factor = 1.5
)
}
\arguments{
\item{palette}{Name of diverging palette from colorspace package (default: "RdYlBu"). Other options include "RdBu", "PiYG", "BrBG", "PuOr", "RdGy".}

\item{zero_color}{Color for zero values in hex (default: "#FFFFFF" - white for clear distinction)}

\item{n_colors}{Number of color steps (default: 11)}

\item{gradient_scaling}{Type of gradient scaling: "linear" or "enhanced" (default: "enhanced"). "linear" uses standard color mapping. "enhanced" gives more color distinction to smaller values.}

\item{enhanced_threshold_pct}{Percentage of maximum value to use as threshold for enhanced scaling (default: 50). Values below this percentage get more color distinction.}

\item{enhanced_expansion_factor}{Factor controlling how much more color distinction small values get (default: 1.5). Higher values mean more distinction for small differences. Only used when gradient_scaling = "enhanced".}
}
\value{
A colorer function that can be passed to plot_tg() or create_tg_animation()
}
\description{
Create custom color scale with enhanced visibility for small values
}
\details{
The enhanced scaling works by compressing small values in the scaled space, which gives them more colors in the final gradient. For example, if your data ranges from 0-20 percent and you use enhanced_threshold_pct = 50 with enhanced_expansion_factor = 2.0, then values 0-10 percent will get twice as much color distinction compared to linear scaling.
}
\examples{
# Basic usage with linear scaling
colorer <- create_custom_colorer(gradient_scaling = "linear")
plot_tg(data, colorer = colorer)

# Enhanced scaling for better small value distinction
colorer <- create_custom_colorer(
  gradient_scaling = "enhanced",
  enhanced_threshold_pct = 30,
  enhanced_expansion_factor = 2.0
)
plot_tg(data, colorer = colorer)

}
