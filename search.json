[{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 ThinkingGrid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/generate_survey_read_data.html","id":"generate-qualtrics-survey","dir":"Articles","previous_headings":"","what":"Generate Qualtrics Survey","title":"generate_survey_read_data","text":"Generating Qualtrics survey requires path setup file contains question text IDs. file must id column entry column needs unique. Qualtrics file, number questions generated equal number rows setup file. question column used question text Qualtrics survey optional. Sample Setup File generate_survey function can used generate Qualtrics survey. output .qsf file can imported Qualtrics. question_text argument determines whether question text setup file included survey. set TRUE, question text included; set FALSE, “Insert text ” used placeholder question text. run code interactively, generate file named my_thinking_grid_survey-0.qsf current working directory. code generate file named my_thinking_grid_survey-0.qsf current working directory. file can imported Qualtrics create survey. filename follows pattern {output_file_name}-{partition_number}.qsf, partition number starts 0. imported, can customize survey Qualtrics needed.","code":"setup_file <- system.file(\"extdata\", \"sample_setup_file.csv\", package = \"ThinkingGrid\") setup_data <- read.csv(setup_file)  knitr::kable(setup_data, caption = \"Sample Setup File\") generate_survey(   survey_setup_file = setup_file, # path to the setup file   output_file_name = \"my_thinking_grid_survey\", # custom name for the output file   question_text = TRUE # whether to include question text in the survey )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/generate_survey_read_data.html","id":"read-qualtrics-survey-data","dir":"Articles","previous_headings":"","what":"Read Qualtrics Survey Data","title":"generate_survey_read_data","text":"data collection complete, download survey data Qualtrics CSV format. read_survey_data function can used read data R. function requires path setup file path downloaded CSV file Qualtrics. function return data frame survey responses. read_qualtrics_data returns dataframe. uid unique identifier row Qualtrics output. Deliberate.Constraints Automatic.Constraints columns correspond X Y axes respectively; span one six. Depths within quadrant denoted Free.Depth, Directed.Depth, AffDir.Depth, Sticky.Depth. four columns represent bottom-left, bottom-right, top-right, top-left quadrants respectively. Values four columns range zero five. Survey Data Read Qualtrics","code":"# Path to the downloaded Qualtrics survey data CSV file qualtrics_data_file <- system.file(\"extdata\", \"sample_qualtrics_output.csv\", package = \"ThinkingGrid\")  survey_data <- read_qualtrics_data(   data_file = qualtrics_data_file, # path to the Qualtrics data file   setup_file = setup_file # path to the setup file ) knitr::kable(survey_data, caption = \"Survey Data Read from Qualtrics\")"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/plot_2x2.html","id":"plotting-quirks","dir":"Articles","previous_headings":"","what":"Plotting Quirks","title":"plot_2x2","text":"notice theme argument plots different theme subplots. , default, inner theme (.e., subplot theme) generated can manually set inner theme using inner_theme optional argument. affect png images, plots.","code":"default_inner_theme #> function (inner_margin = 20)  #> { #>     im <- inner_margin #>     ggplot2::theme_minimal() + ggplot2::theme(plot.background = ggplot2::element_blank(),  #>         panel.background = ggplot2::element_blank(), plot.margin = ggplot2::margin(im,  #>             im, im, im), legend.position = \"none\", aspect.ratio = 1,  #>         axis.title = ggplot2::element_text(size = 14), axis.text = ggplot2::element_text(size = 12),  #>         axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 10)),  #>         panel.grid.major = ggplot2::element_line(color = \"gray90\",  #>             linewidth = 0.2), panel.grid.minor = ggplot2::element_blank(),  #>         axis.line = ggplot2::element_line(color = \"black\", linewidth = 0.5)) +  #>         ggplot2::labs(title = ggplot2::element_blank()) #> } #> <bytecode: 0x55b3cbe3c028> #> <environment: namespace:ThinkingGrid> library(ggplot2) #>  #> Attaching package: 'ggplot2' #> The following object is masked from 'package:sjPlot': #>  #>     set_theme  thinkgrid_quadrant_plot(   p_sticky = image,   p_salience = salience_plot,   p_free = image,   p_directed = directed_plot,   inner_theme = ggplot2::theme_dark() )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/plot_2x2.html","id":"rendering","dir":"Articles","previous_headings":"Plotting Quirks","what":"Rendering","title":"plot_2x2","text":"using RStudio, plots generated thinkgrid_quadrant_plot tendency render especially nicely (funny aspect ratios, text crowding issues, etc). solve rendering issues, recommend saving plot file.","code":"ggplot2::ggsave(\"properly_rendered.jpg\", combined_plot2, width = 10, height = 10, dpi = 300)"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/plot_tg.html","id":"overall-plots","dir":"Articles","previous_headings":"","what":"Overall Plots","title":"plot_tg","text":"plot_tg function used visualize results Thinking Grid analysis. use function, need dataframe containing one column deliberate constraints another containing automatic constraints. dataset illustrated , dc represents deliberate constraints ac represents automatic constraints need passed characters dc_column ac_column parameters respectively. using default arguments, type parameter set \"depth\".  type parameter can set one six parameters: \"cells\", \"quadrants\", \"horizontal\", \"vertical\", \"constraints\", \"depth\" (default).","code":"simple_depth <- plot_tg(   tg_data,   dc_column = \"dc\",   ac_column = \"ac\" )  simple_depth$plot simple_constraints <- plot_tg(   tg_data,   type = \"cells\",   dc_column = \"dc\",   ac_column = \"ac\" )  simple_constraints$plot"},{"path":[]},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/plot_tg.html","id":"separate-plots","dir":"Articles","previous_headings":"Condition plots","what":"Separate Plots","title":"plot_tg","text":"plot_tg function allows user plot separate plots using condition column present within dataset. use functionality, set proportion_type argument \"condition\" (default \"overall\" plot overall proportions shown examples ). condition_column argument needs populated character representing column name. number plots created equal number conditions present within column.  number conditions exactly equal two, two plots plotted side side similar example . However, number conditions greater two, separate plots returned condition. illustration , column valence five possible values. code return five ggplot objects, one unique condition, can retrieved using name condition. highlighted retrieve plots valence == 0 valence == -2.","code":"condition_separate <- plot_tg(   tg_data,   type = \"constraints\",   proportion_type = \"condition\",   dc_column = \"dc\",   ac_column = \"ac\",   condition_column = \"condition\" )  condition_separate$plot condition_separate2 <- plot_tg(   tg_data,   type = \"vertical\",   proportion_type = \"condition\",   dc_column = \"dc\",   ac_column = \"ac\",   condition_column = \"valence\" )  condition_separate2_val0 <- condition_separate2$plot$`0` condition_separate2_val2 <- condition_separate2$plot$`-2`  grid.arrange(condition_separate2_val0, condition_separate2_val2, ncol = 1)"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/plot_tg.html","id":"difference-plots","dir":"Articles","previous_headings":"Condition plots","what":"Difference Plots","title":"plot_tg","text":"Another way visualizing data available number conditions exactly two. proportion_type set \"condition\", comparison_type parameter indicated \"difference\" (default \"separate\" generates plots ). visualization essentially depicts much shift people made across two conditions.  can case extreme values difference distributions sparse. example, maybe example , difference percentage 4% appears ; whereas values lie negative two two. instances, color palette overly emphasizes extreme values, compressing majority data points potentially interest. Three parameters can used correct . First, gradient_scaling argument must set \"enhanced\". enhanced_threshold_pct controls percentage data must enhanced color palette, default 50. Essentially ’s telling code proportion data provided ’d like enhance. enhanced_expansion_factor much ’d like selected area enhanced (default=1.5). simple terms, function compress color palette way bottom 50% data get colors (factor 1.5) enhancing variability region, making easier readers pick minute differences.","code":"condition_difference <- plot_tg(   tg_data,   proportion_type = \"condition\",   comparison_type = \"difference\",   dc_column = \"dc\",   ac_column = \"ac\",   condition_column = \"condition\" )  condition_difference$plot condition_difference2 <- plot_tg(   tg_data,   proportion_type = \"condition\",   comparison_type = \"difference\",   dc_column = \"dc\",   ac_column = \"ac\",   condition_column = \"condition\",   gradient_scaling = \"enhanced\",   enhanced_threshold_pct = 40,   enhanced_expansion_factor = 2, )  condition_difference$plot"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/articles/plot_tg.html","id":"creating-gifs","dir":"Articles","previous_headings":"","what":"Creating GIFs","title":"plot_tg","text":"might instances users want visualize progression thinking grid based condition. dataframe, want visualize reports thinking grid change across different levels valence (-2 2). create_tg_animation function can assist . Similar plot_tg function, expects dataframe, dc_column, ac_column, condition_column. condition column numeric, output GIF first sorting condition ascending manner. example, output start negative two end two. file saved name can altered using filename parameter (default: tg_animation.gif).","code":"create_tg_animation(   tg_data,   proportion_type = \"condition\",   dc_column = \"dc\",   ac_column = \"ac\",   condition_column = \"valence\",   filename = \"example_gif.gif\" )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Avinash Kulkarni. Author, copyright holder. Vishal Kuvar. Author, maintainer. Zac Irving. Contributor, funder.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kulkarni , Kuvar V (2025). ThinkingGrid: Tools Thinking Grid Statistics. R package version 0.1.0, https://-kulkarn.github.io/qualtrics-thinkgrid/.","code":"@Manual{,   title = {ThinkingGrid: Tools for Thinking Grid Statistics},   author = {Avinash Kulkarni and Vishal Kuvar},   year = {2025},   note = {R package version 0.1.0},   url = {https://a-kulkarn.github.io/qualtrics-thinkgrid/}, }"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/ThinkingGrid-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ThinkingGrid: Tools for Thinking Grid Statistics — ThinkingGrid-package","title":"ThinkingGrid: Tools for Thinking Grid Statistics — ThinkingGrid-package","text":"Provides comprehensive tools conducting research using Thinking Grid framework, psychological measurement approach understanding deliberate automatic cognitive constraints. Includes functions generating 'Qualtrics' surveys, processing survey responses, calculating quadrant depths, creating various visualization types including heatmaps, animations, statistical plots.","code":""},{"path":[]},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/ThinkingGrid-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ThinkingGrid: Tools for Thinking Grid Statistics — ThinkingGrid-package","text":"Maintainer: Vishal Kuvar kuvar001@umn.edu (ORCID) Authors: Avinash Kulkarni avi.kulkarni.2.71@gmail.com [copyright holder] contributors: Zac Irving zci7c@virginia.edu [contributor, funder]","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/add_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds taxicab metric calculation columns to a dataframe. — add_depths","title":"Adds taxicab metric calculation columns to a dataframe. — add_depths","text":"Adds taxicab metric calculation columns dataframe.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/add_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds taxicab metric calculation columns to a dataframe. — add_depths","text":"","code":"add_depths(data, dc = \"Deliberate.Constraints\", ac = \"Automatic.Constraints\")"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/add_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds taxicab metric calculation columns to a dataframe. — add_depths","text":"data data.frame, needed Data frame containing columns deliberate constraints automatic constraints. dc character, optional Name column containing deliberate constraints. Default \"Deliberate.Constraints\". ac character, optional Name column containing automatic constraints. Default \"Automatic.Constraints\".","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/add_depths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds taxicab metric calculation columns to a dataframe. — add_depths","text":"data frame containing quadrant depths. Columns include \"sticky\", \"hybrid\", \"free\", \"directed\", \"total_depth\", \"quadrant\". value quadrant 1-4, corresponding top-left, top-right, bottom-left, bottom-right.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/add_depths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds taxicab metric calculation columns to a dataframe. — add_depths","text":"function calculates quadrant depths based deliberate automatic constraints provided data file. quadrant depths calculated using taxicab norm. one depth populated per observation, depending quadrant observation falls . remaining three depths set 0.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/add_depths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds taxicab metric calculation columns to a dataframe. — add_depths","text":"","code":"# Calculate quadrant depths from survey data data_file <- system.file(\"extdata\", \"sample_data.csv\", package = \"ThinkingGrid\") if (file.exists(data_file)) {   data_file <- read.csv(data_file)   depth_results <- add_depths(data_file, dc = \"dc\", ac = \"ac\") }"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/check_python_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks status of Python dependency. — check_python_available","title":"Checks status of Python dependency. — check_python_available","text":"Checks python available. Installs python appropriate flag set.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/check_python_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks status of Python dependency. — check_python_available","text":"","code":"check_python_available(install_if_NA = FALSE)"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/check_python_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks status of Python dependency. — check_python_available","text":"install_if_NA logical, optional TRUE, installs python 3.13 required packages. Default FALSE.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/check_python_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks status of Python dependency. — check_python_available","text":"None","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/check_python_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks status of Python dependency. — check_python_available","text":"","code":"if (FALSE) { # \\dontrun{ check_python_available() check_python_available(install_if_NA = TRUE) } # }"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_custom_colorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","title":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","text":"Create custom color scale enhanced visibility small values","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_custom_colorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","text":"","code":"create_custom_colorer(   palette = \"RdYlBu\",   zero_color = \"#FFFFFF\",   n_colors = 11,   gradient_scaling = \"enhanced\",   enhanced_threshold_pct = 50,   enhanced_expansion_factor = 1.5 )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_custom_colorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","text":"palette Name diverging palette colorspace package (default: \"RdYlBu\"). options include \"RdBu\", \"PiYG\", \"BrBG\", \"PuOr\", \"RdGy\". zero_color Color zero values hex (default: \"#FFFFFF\" - white clear distinction) n_colors Number color steps (default: 11) gradient_scaling Type gradient scaling: \"linear\" \"enhanced\" (default: \"enhanced\"). \"linear\" uses standard color mapping. \"enhanced\" gives color distinction smaller values. enhanced_threshold_pct Percentage maximum value use threshold enhanced scaling (default: 50). Values percentage get color distinction. enhanced_expansion_factor Factor controlling much color distinction small values get (default: 1.5). Higher values mean distinction small differences. used gradient_scaling = \"enhanced\".","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_custom_colorer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","text":"colorer function can passed plot_tg() create_tg_animation()","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_custom_colorer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","text":"enhanced scaling works compressing small values scaled space, gives colors final gradient. example, data ranges 0-20 percent use enhanced_threshold_pct = 50 enhanced_expansion_factor = 2.0, values 0-10 percent get twice much color distinction compared linear scaling.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_custom_colorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create custom color scale with enhanced visibility for small values — create_custom_colorer","text":"","code":"# Create dummy data for testing dummy_data <- data.frame(   Deliberate.Constraints = sample(1:6, 100, replace = TRUE),   Automatic.Constraints = sample(1:6, 100, replace = TRUE) )  # Basic usage with linear scaling colorer <- create_custom_colorer(gradient_scaling = \"linear\")  # Enhanced scaling for better small value distinction colorer_enhanced <- create_custom_colorer(   gradient_scaling = \"enhanced\",   enhanced_threshold_pct = 30,   enhanced_expansion_factor = 2.0 )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_tg_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Animated Thinking Grid Visualizations — create_tg_animation","title":"Create Animated Thinking Grid Visualizations — create_tg_animation","text":"Generate animated GIF showing Thinking Grid plots across different conditions time points.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_tg_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Animated Thinking Grid Visualizations — create_tg_animation","text":"","code":"create_tg_animation(   survey_results,   dc_column = \"Deliberate.Constraints\",   ac_column = \"Automatic.Constraints\",   condition_column = NULL,   type = \"depth\",   proportion_type = \"overall\",   colorer = NULL,   palette = \"RdYlBu\",   zero_color = \"#FFFFFF\",   gradient_scaling = \"linear\",   enhanced_threshold_pct = 50,   enhanced_expansion_factor = 1.5,   x_label = \"Directedness\",   y_label = \"Stickiness\",   max_legend = NULL,   min_legend = NULL,   plot_title = NULL,   legend_title = NULL,   plot_subtitle = NULL,   filename = \"tg_animation.gif\",   duration = 1,   width = 800,   height = 800,   sorted_conditions = NULL,   subset_condition = NULL )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_tg_animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Animated Thinking Grid Visualizations — create_tg_animation","text":"survey_results Data frame containing survey results constraint response columns. dc_column Name deliberate constraints column (default: \"Deliberate.Constraints\"). ac_column Name automatic constraints column (default: \"Automatic.Constraints\"). condition_column Column name containing conditions animation frames. unique value becomes one frame. type Type visualization (default: \"depth\"). See plot_tg options. proportion_type Currently \"overall\" supported animations. colorer Custom colorer function. NULL, uses default based parameters. palette Color palette (default: \"RdYlBu\"). See plot_tg options. zero_color Color zero values (default: \"#FFFFFF\"). gradient_scaling Scaling method: \"linear\" (default) \"enhanced\". enhanced_threshold_pct Enhanced scaling threshold percentage (default: 50). enhanced_expansion_factor Enhanced scaling expansion factor (default: 1.5). x_label X-axis label (default: \"Directedness\"). y_label Y-axis label (default: \"Stickiness\"). max_legend Maximum legend value. NULL, calculated conditions. min_legend Minimum legend value. NULL, calculated conditions. plot_title Main title appearing frames. legend_title Legend title. plot_subtitle Subtitle(s). Can single string (subtitle frames) vector (one subtitle per condition order sorted_conditions provided). filename Output GIF filename (default: \"tg_animation.gif\"). duration Duration frame seconds (default: 1). width GIF width pixels (default: 800). height GIF height pixels (default: 800). sorted_conditions Vector specifying frame order. Must contain unique values condition_column. NULL, numeric conditions sorted ascending order character/factor conditions random order (warning). subset_condition R expression string subsetting data analysis. Applied splitting conditions.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_tg_animation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Animated Thinking Grid Visualizations — create_tg_animation","text":"Invisibly returns list ggplot objects (one per frame). GIF file saved disk.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_tg_animation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Animated Thinking Grid Visualizations — create_tg_animation","text":"function creates one frame per unique value condition_column. frames use legend scale (calculated conditions) ensure comparability across frames. Requires 'gifski' package GIF creation. prompt install missing.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/create_tg_animation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Animated Thinking Grid Visualizations — create_tg_animation","text":"","code":"## Create sample data with time points for animation set.seed(123)  ## For reproducible examples survey_data <- data.frame(   Deliberate.Constraints = sample(1:6, 300, replace = TRUE),   Automatic.Constraints = sample(1:6, 300, replace = TRUE),   time_point = rep(1:3, each = 100),   week = rep(1:3, each = 100),   completed_training = sample(c(TRUE, FALSE), 300, replace = TRUE) )  # \\donttest{ ## Basic animation across time points (creates temporary GIF file) temp_gif1 <- tempfile(fileext = \".gif\") create_tg_animation(survey_data,                      condition_column = \"time_point\",                     filename = temp_gif1) ## Clean up temporary file if (file.exists(temp_gif1)) file.remove(temp_gif1) #> [1] TRUE  ## Enhanced scaling for small differences temp_gif2 <- tempfile(fileext = \".gif\") create_tg_animation(survey_data,                     condition_column = \"week\",                     gradient_scaling = \"enhanced\",                     enhanced_threshold_pct = 40,                     enhanced_expansion_factor = 2.0,                     subset_condition = \"completed_training == TRUE\",                     filename = temp_gif2) #> Applying subset condition: completed_training == TRUE #> Subset applied successfully. 154 rows remaining out of 300 original rows. ## Clean up temporary file if (file.exists(temp_gif2)) file.remove(temp_gif2) #> [1] TRUE # }"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/default_inner_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Default theme for subplots in a ThinkingGrid 2x2 quadrant plot. — default_inner_theme","title":"Default theme for subplots in a ThinkingGrid 2x2 quadrant plot. — default_inner_theme","text":"default theme settings subplots 2x2 quadrant plot. order display correctly, important properties theme : background set transparant elements. main plot titles legends removed. (Axis labels kept.) aspect ratio set 1.00. Margins adjusted set plot within background squares.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/default_inner_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default theme for subplots in a ThinkingGrid 2x2 quadrant plot. — default_inner_theme","text":"","code":"default_inner_theme(inner_margin = 20)"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/default_inner_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default theme for subplots in a ThinkingGrid 2x2 quadrant plot. — default_inner_theme","text":"inner_margin integer, optional Controls padding inner subplots.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/default_inner_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default theme for subplots in a ThinkingGrid 2x2 quadrant plot. — default_inner_theme","text":"theme object settings subplots 2x2 quadrant plot.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/default_inner_theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default theme for subplots in a ThinkingGrid 2x2 quadrant plot. — default_inner_theme","text":"","code":"plots <- ThinkingGrid:::create_test_2x2_plots() p1 <- plots[[1]] p2 <- plots[[2]] p3 <- plots[[3]] p4 <- plots[[4]]  # Here we can customize the theme. itheme <- default_inner_theme(inner_margin = 10)  # This is the usual syntax. thinkgrid_quadrant_plot(p1, p2, p3, p4, inner_theme = itheme)"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/generate_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Qualtrics importable survey file from a CSV file of questions. — generate_survey","title":"Creates a Qualtrics importable survey file from a CSV file of questions. — generate_survey","text":"Creates Qualtrics importable survey file CSV file questions.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/generate_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Qualtrics importable survey file from a CSV file of questions. — generate_survey","text":"","code":"generate_survey(   survey_setup_file,   output_file_name = \"output_survey\",   question_text = TRUE )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/generate_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Qualtrics importable survey file from a CSV file of questions. — generate_survey","text":"survey_setup_file character, required Path csv file containing survey setup. file MUST column called \"id\". row column unique. Indivudial thinking grids created row column. column called \"question\". column contains question text. Quotes around question text required. question text provided, function use default text. Please note columns case sensitive. File setup csv file without question text. work question_text parameter set FALSE. placeholder text (\"Insert text .\") used case.: id ThinkingGrid1 ThinkingGrid2 ThinkingGrid3 File setup csv file question text: id,question ThinkingGrid1,Report thoughts thinking grid 1 ThinkingGrid2,Report thoughts thinking grid 2 ThinkingGrid3,Report thoughts thinking grid 3 file create 3 thinking grids corresponding questions. output_file_name character, optional Name output qsf file. Default \"output_survey\". extension qsf added automatically. desired file name \"my_qsf_output.qsf, function called generate_survey(\"path//setup/survey_setup_file.csv\", \"path//output/my_qsf_output\"). Default name \"output_survey.qsf\". file name exists, overwritten. question_text logical, optional TRUE, function use question text provided csv file. FALSE, function use default question text (\"Insert text .\"). Default TRUE.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/generate_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a Qualtrics importable survey file from a CSV file of questions. — generate_survey","text":"None","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/generate_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Qualtrics importable survey file from a CSV file of questions. — generate_survey","text":"","code":"# Generate survey from sample setup file setup_file <- system.file(\"extdata\", \"sample_setup_file.csv\", package = \"ThinkingGrid\") if (file.exists(setup_file)) {   generate_survey(setup_file, \"_temp_output_\")   # Clean up   file.remove(\"_temp_output_-0.qsf\") } #> [1] TRUE"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/install_thinkgrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Package setup. — install_thinkgrid","title":"Package setup. — install_thinkgrid","text":"Creates virtual environment installs required python packages","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/install_thinkgrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package setup. — install_thinkgrid","text":"","code":"install_thinkgrid(envname = \"r-thinkgrid\")"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/install_thinkgrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package setup. — install_thinkgrid","text":"envname character, optional Name virtual environment created. Default \"r-thinkgrid\".","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/install_thinkgrid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package setup. — install_thinkgrid","text":"None","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/install_thinkgrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package setup. — install_thinkgrid","text":"","code":"if (FALSE) { # \\dontrun{ install_thinkgrid() install_thinkgrid(\"new_environment_name\") } # }"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/plot_tg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Thinking Grid Visualizations — plot_tg","title":"Create Thinking Grid Visualizations — plot_tg","text":"Generate various types Thinking Grid plots survey data containing deliberate automatic constraint responses.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/plot_tg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Thinking Grid Visualizations — plot_tg","text":"","code":"plot_tg(   survey_results,   proportion_type = \"overall\",   type = \"depth\",   colorer = NULL,   palette = \"RdYlBu\",   zero_color = \"#FFFFFF\",   gradient_scaling = \"linear\",   enhanced_threshold_pct = 50,   enhanced_expansion_factor = 1.5,   x_label = \"Directedness\",   y_label = \"Stickiness\",   dc_column = \"Deliberate.Constraints\",   ac_column = \"Automatic.Constraints\",   condition_column = NULL,   comparison_type = \"separate\",   max_legend = NULL,   min_legend = NULL,   plot_title = NULL,   legend_title = NULL,   plot_subtitle = NULL,   subset_condition = NULL )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/plot_tg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Thinking Grid Visualizations — plot_tg","text":"survey_results Data frame containing survey results constraint response columns. proportion_type Type proportion calculation: \"overall\" (default) single plot showing overall response patterns, \"condition\" separate plots different conditions (requires condition_column). type Type visualization: \"depth\" (default) shows distance grid center quadrant, \"cells\" shows individual cell heatmap (6x6 grid), \"quadrants\" shows four-quadrant summary, \"horizontal\" shows horizontal bands (stickiness levels), \"vertical\" shows vertical bands (directedness levels), \"constraints\" shows diagonal constraint bands. colorer Custom colorer function. NULL, uses default based parameters. Create create_custom_colorer(). palette Color palette name colorspace package (default: \"RdYlBu\"). Options: \"RdBu\", \"PiYG\", \"BrBG\", \"PuOr\", \"RdGy\". zero_color Color zero values (default: \"#FFFFFF\"). gradient_scaling Color gradient scaling method: \"linear\" (default) standard linear color mapping, \"enhanced\" color distinction smaller values. enhanced_threshold_pct enhanced scaling: percentage max value used threshold (default: 50). Values get enhanced distinction. enhanced_expansion_factor enhanced scaling: factor controlling much distinction small values get (default: 1.5). Higher values mean distinction. x_label X-axis label (default: \"Directedness\"). y_label Y-axis label (default: \"Stickiness\"). dc_column Name deliberate constraints column (default: \"Deliberate.Constraints\"). ac_column Name automatic constraints column (default: \"Automatic.Constraints\"). condition_column Column name grouping conditions. Required proportion_type = \"condition\". comparison_type condition plots: \"separate\" (default) side--side plots 2 conditions separate plots 3+, \"difference\" difference plot (condition1 - condition2, requires exactly 2 conditions). max_legend Maximum legend value. NULL, calculated data. min_legend Minimum legend value. NULL, calculated data. plot_title Main plot title. legend_title Legend title. NULL, uses \"Percentage (percent)\" \"Difference (percent)\". plot_subtitle Plot subtitle. condition plots comparison_type = \"separate\", provide vector one subtitle per condition. subset_condition R expression string subsetting data analysis. Uses standard R syntax. referenced columns must exist survey_results.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/plot_tg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Thinking Grid Visualizations — plot_tg","text":"list containing: plot (ggplot object list ggplot objects 3+ conditions) prop_data (calculated proportion data).","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/plot_tg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Thinking Grid Visualizations — plot_tg","text":"function expects constraint responses 1-6 scale deliberate constraints (x-axis) range 1 = low directedness 6 = high directedness, automatic constraints (y-axis) range 1 = low stickiness 6 = high stickiness. enhanced scaling, algorithm compresses small values color space give visual distinction. useful responses lower ranges.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/plot_tg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Thinking Grid Visualizations — plot_tg","text":"","code":"## Create sample data for testing set.seed(123)  ## For reproducible examples survey_data <- data.frame(   Deliberate.Constraints = sample(1:6, 100, replace = TRUE),   Automatic.Constraints = sample(1:6, 100, replace = TRUE),   treatment_group = sample(c(\"A\", \"B\"), 100, replace = TRUE),   age = sample(20:60, 100, replace = TRUE),   experience = sample(1:5, 100, replace = TRUE) )  ## Basic overall plot result1 <- plot_tg(survey_data)  ## Cell-level heatmap with enhanced scaling for small values result2 <- plot_tg(survey_data,                     type = \"cells\",                     gradient_scaling = \"enhanced\",                    enhanced_threshold_pct = 30,                    enhanced_expansion_factor = 2.0)  ## Compare conditions side by side result3 <- plot_tg(survey_data,                     proportion_type = \"condition\",                    condition_column = \"treatment_group\",                    comparison_type = \"separate\")  ## Subset data before analysis result4 <- plot_tg(survey_data,                     subset_condition = \"age > 25 & experience >= 2\",                    type = \"quadrants\") #> Applying subset condition: age > 25 & experience >= 2 #> Subset applied successfully. 75 rows remaining out of 100 original rows."},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/read_qualtrics_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses Qualtrics survey output into a dataframe. — read_qualtrics_data","title":"Parses Qualtrics survey output into a dataframe. — read_qualtrics_data","text":"Parses Qualtrics survey output dataframe.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/read_qualtrics_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses Qualtrics survey output into a dataframe. — read_qualtrics_data","text":"","code":"read_qualtrics_data(data_file, setup_file)"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/read_qualtrics_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses Qualtrics survey output into a dataframe. — read_qualtrics_data","text":"data_file character, needed path Qualtrics output located. csv file needs provided function UNEDITED. setup_file character, needed setup_file used generate survey. file file used generate survey. file format survey_setup_file used generate_survey function.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/read_qualtrics_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses Qualtrics survey output into a dataframe. — read_qualtrics_data","text":"data frame containing Qualtrics data. Columns include \"uid\", \"Probe.Identifier\", \"Deliberate.Constraints\", \"Automatic.Constraints\" uid: Unique identifier participant. correspons row number Qualtrics output file. Probe.Identifier: Identifier probe. \"id\" column setup_file. Deliberate.Constraints: deliberate constraints provided participant. (X-axis thinking grid) Automatic.Constraints: automatic constraints provided participant. (Y-axis thinking grid)","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/read_qualtrics_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parses Qualtrics survey output into a dataframe. — read_qualtrics_data","text":"","code":"# Read Qualtrics survey data setup_file <- system.file(\"extdata\", \"sample_setup_file.csv\", package = \"ThinkingGrid\") data_file <- system.file(\"extdata\", \"sample_qualtrics_output.csv\", package = \"ThinkingGrid\") if (file.exists(setup_file) && file.exists(data_file)) {   survey_data <- read_qualtrics_data(data_file, setup_file) }"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the background for ThinkingGrid plots. — thinkgrid_quadrant_background","title":"Creates the background for ThinkingGrid plots. — thinkgrid_quadrant_background","text":"Creates background ThinkingGrid plots.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the background for ThinkingGrid plots. — thinkgrid_quadrant_background","text":"","code":"thinkgrid_quadrant_background(   arrowwidth = 1,   xlab = \"Executive Control\",   ylab = \"Salience\" )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the background for ThinkingGrid plots. — thinkgrid_quadrant_background","text":"arrowwidth integer, optional width arrow objects. xlab character, optional Label x-axis. ylab character, optional Label y-axis.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates the background for ThinkingGrid plots. — thinkgrid_quadrant_background","text":"plot containing 6x6 grid background image 2x2 thinkgrid plots also contains xy-axis arrows labels.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a 2x2 plot grid overlayed on top of a ThinkingGrid background. — thinkgrid_quadrant_plot","title":"Creates a 2x2 plot grid overlayed on top of a ThinkingGrid background. — thinkgrid_quadrant_plot","text":"Creates 2x2 quadrant plot four ggplot objects.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a 2x2 plot grid overlayed on top of a ThinkingGrid background. — thinkgrid_quadrant_plot","text":"","code":"thinkgrid_quadrant_plot(   p_sticky,   p_salience,   p_free,   p_directed,   inner_theme = NULL,   arrowwidth = 1,   xlab = \"Executive Control\",   ylab = \"Salience\" )"},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a 2x2 plot grid overlayed on top of a ThinkingGrid background. — thinkgrid_quadrant_plot","text":"p_sticky (ggplot rastergrob) ggplot object \"Sticky\" quadrant. p_salience (ggplot rastergrob) ggplot object \"Salience\" quadrant. p_free (ggplot rastergrob) ggplot object \"Free\" quadrant. p_directed (ggplot rastergrob) ggplot object \"Directed\" quadrant. inner_theme (theme, optional) theme inner subplots. See default_inner_theme details. arrowwidth (integer, optional) Controls thickness axis arrows. xlab (character, optional) Label x-axis. ylab (character, optional) Label y-axis.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a 2x2 plot grid overlayed on top of a ThinkingGrid background. — thinkgrid_quadrant_plot","text":"ggplot object (created via cowplot) consists thinking grid background inlayed 2x2 subplots (images) corresponding respective quadrant.","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/reference/thinkgrid_quadrant_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a 2x2 plot grid overlayed on top of a ThinkingGrid background. — thinkgrid_quadrant_plot","text":"","code":"# This is a list of four plots generated by some regression. Their exact nature is not # important aside from the fact that they are ggplot objects. plots <- ThinkingGrid:::create_test_2x2_plots() p1 <- plots[[1]] p2 <- plots[[2]] p3 <- plots[[3]] p4 <- plots[[4]]  # This is the usual syntax. thinkgrid_quadrant_plot(p1, p2, p3, p4)   # However, it is possible to use images as the subplots. IDEALLY, one uses an image # type without backgrounds such as a PNG. img_path <- system.file(\"extdata\", \"rabbiduck.png\", package = \"ThinkingGrid\") rabbi <- png::readPNG(img_path) rabbigrob <- grid::rasterGrob(rabbi)  # Note you must raster the image!  # Create sample plots for demonstration plots <- ThinkingGrid:::create_test_2x2_plots() thinkgrid_quadrant_plot(p1, p2, p3, rabbigrob)"},{"path":[]},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/news/index.html","id":"new-features-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"ThinkingGrid 0.0.0.9000","text":"Initial release ThinkingGrid package generate_survey() - Create Qualtrics importable survey files CSV setup files read_qualtrics_data() - Parse Qualtrics survey output data frames plot_tg() - Create various Thinking Grid visualizations (cells, quadrants, horizontal, vertical, constraints, depth) create_tg_animation() - Generate animated GIF visualizations across conditions add_depths() - Calculate quadrant depths using taxicab metric thinkgrid_quadrant_plot() - Create 2x2 quadrant plots statistical models install_thinkgrid() - Set Python virtual environment required dependencies check_python_available() - Check Python installation status","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/news/index.html","id":"visualization-types-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Visualization Types","title":"ThinkingGrid 0.0.0.9000","text":"Cells: Individual cell heatmap (6x6 grid) Quadrants: Four-quadrant summary plots Horizontal: Horizontal bands showing stickiness levels Vertical: Vertical bands showing directedness levels Constraints: Diagonal constraint bands Depth: Distance grid center quadrant","code":""},{"path":"https://a-kulkarn.github.io/qualtrics-thinkgrid/news/index.html","id":"dependencies-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"ThinkingGrid 0.0.0.9000","text":"Python integration via reticulate survey generation data processing ggplot2 ecosystem visualizations Support enhanced color scaling small values Comprehensive testing testthat vdiffr visual regression testing","code":""}]
